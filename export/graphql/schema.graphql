input AuthProviderCredentialsInput {
  email: String!
  password: String!
}

"""
An ISO 8601-encoded datetime
"""
scalar ISO8601DateTime

type MeetingDuration {
  id: ID!
  minutes: Int!
  startedAt: String!
}

type Mutation {
  signInUser(credentials: AuthProviderCredentialsInput): SignInUserPayload
}

type Query {
  """
  Currently logged in user
  """
  currentUser: User

  """
  A single student
  """
  student(id: ID!): Student!

  """
  All students associated with signed in volunteer
  """
  students: [Student!]

  """
  All survey_responses associated with signed in volunteer
  """
  surveyResponses: [SurveyResponse!]
}

"""
Autogenerated return type of SignInUser
"""
type SignInUserPayload {
  token: String
  user: User
}

type Student {
  createdAt: ISO8601DateTime!
  dateOfBirth: ISO8601DateTime
  email: String
  emergencyContactName: String
  emergencyContactPhoneNumber: String
  guardianName: String
  guardianPhoneNumber: String
  id: ID!
  name: String!
  nickname: String
  updatedAt: ISO8601DateTime!
}

type SurveyResponse {
  id: ID!
  meetingDuration: MeetingDuration
  student: Student!
  volunteer: User!
}

type User {
  createdAt: ISO8601DateTime!
  email: String
  id: ID!
  name: String
  role: String
  updatedAt: ISO8601DateTime!
}
